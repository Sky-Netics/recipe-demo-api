name: Build and Deploy

on:
  push:
    branches:
    - dev

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  DOCKER_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  DOCKER_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION
    }}.amazonaws.com/${{ github.event.repository.name }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Create ECR repository if not exists
      run: |
        aws ecr describe-repositories --repository-names ${{ github.event.repository.name }} || \
        aws ecr create-repository --repository-name ${{ github.event.repository.name }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install AWS SAM CLI
      run: |
        pip install aws-sam-cli
        pip install awscli

    - name: Get VPC and Subnet IDs
      run: |
        VPC_ID=$(aws ec2 describe-vpcs --filters "Name=isDefault,Values=true" --query "Vpcs[0].VpcId" --output text)
        SUBNET_IDS=$(aws ec2 describe-subnets --filters "Name=vpc-id,Values=$VPC_ID" --query "Subnets[*].SubnetId" --output text)
        SUBNET_ARRAY=($SUBNET_IDS)
        echo "VPC_ID=$VPC_ID" >> $GITHUB_ENV
        echo "SUBNET1=${SUBNET_ARRAY[0]}" >> $GITHUB_ENV
        echo "SUBNET2=${SUBNET_ARRAY[1]}" >> $GITHUB_ENV

    - name: Build SAM application
      run: sam build -t ec2-template.yaml

    - name: Deploy SAM application
      run: |
        sam deploy \
          --stack-name recipeapp-stack \
          --template-file .aws-sam/build/template.yaml \
          --capabilities CAPABILITY_IAM \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset \
          --parameter-overrides \
          DockerImageUri=${DOCKER_IMAGE} \
          Subnet1=${SUBNET1} \
          Subnet2=${SUBNET2} \
          VpcId=${VPC_ID}
